buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}


apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = "io.ktor.server.netty.EngineMain"


apply plugin: 'com.github.johnrengelman.shadow'

group 'com.example'
version '0.0.1'


shadowJar {
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
    }
}

jar {
    baseName 'com.example'
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "org.jetbrains:kotlin-css-jvm:1.0.0-pre.31-kotlin-1.2.41"
    compile "io.ktor:ktor-client-core:$ktor_version"
    compile "io.ktor:ktor-client-core-jvm:$ktor_version"
    compile "io.ktor:ktor-client-json-jvm:$ktor_version"
    compile "io.ktor:ktor-client-gson:$ktor_version"
    compile 'org.jsoup:jsoup:1.12.1'
    compile "org.telegram:telegrambots:4.4.0.2"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
}
